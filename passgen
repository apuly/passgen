#!/usr/bin/python3

import argparse

from string import ascii_lowercase, ascii_uppercase, digits, punctuation
from random import sample

parser = argparse.ArgumentParser(description="password generator in python")
parser.add_argument('length', default=32, type=int, nargs='?')

arguments = {
    "no-special": "Removes all special characters",
    "no-upper": "Removes all capital case letters",
    "no-lower": "Removes all lower case letters",
    "no-digits": "Removes all numbers",
    "all-special": "Some chacaters (~`^'\") are disabled by default. This reanables them"
}

for argument in arguments:
    parser.add_argument("--"+argument, help=arguments[argument], action='store_true')
parser.add_argument("--verbose", "-v", action='store_true')
parser.add_argument("--exclude-chars", "-e", nargs="?", default="")
parser.add_argument("--include-chars", "-i", nargs="?", default="")

args = parser.parse_args()

all_chars = set()
if not args.all_special:
    punctuation = "".join(c for c in punctuation if c not in "~`^'\"")
if not args.no_digits:
    all_chars = all_chars.union(set(digits))
if not args.no_special:
    all_chars = all_chars.union(set(punctuation))
if not args.no_upper:
    all_chars = all_chars.union(set(ascii_uppercase))
if not args.no_lower:
    all_chars = all_chars.union(set(ascii_lowercase))

if args.exclude_chars != "":
    for char in args.exclude_chars:
        if char in all_chars:
            all_chars.remove(char)
if args.include_chars != "":
    all_chars = all_chars.union(set(args.include_chars))

if args.verbose:
    print(f"arguments: {args}")
    all_char_string = "".join(sorted(all_chars))
    print(f"possible characters: {all_char_string}")

password_txt = "".join(sample(all_chars, 1)[0] for _ in range(args.length))

print(password_txt)
